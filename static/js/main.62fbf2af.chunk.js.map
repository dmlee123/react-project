{"version":3,"sources":["Components/WatchList/WatchList.js","Components/RandomAnime/RandomAnime.js","Components/Main/Main.js","Components/Header/Header.js","Components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["WatchList","props","console","log","watchListJSX","selectedAnime","onClick","removeAnimeFromList","className","RandomAnime","useState","anime","setRandomAnime","setSelectedAnime","random","Math","floor","animeJSX","title","src","image_url","alt","rank","synopsis","fetch","then","response","json","data","Main","to","Header","id","href","Footer","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4UAsBeA,EApBG,SAACC,GAClBC,QAAQC,IAAIF,GAGZ,IAAIG,EAAe,GAanB,OAZIH,EAAMI,gBACTD,EACC,qCACC,yCACA,8BACEH,EAAMI,cACP,wBAAQC,QAASL,EAAMM,oBAAvB,qCAMG,qBAAKC,UAAU,YAAf,SAA4BJ,KCsCrBK,EAtDK,WACnB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0CF,qBAA1C,mBAAOL,EAAP,KAAsBQ,EAAtB,KAEMC,EAASC,KAAKC,MAAsB,IAAhBD,KAAKD,UAqB3BG,EAAW,GAiBf,OAhBIN,EAAMO,QACTD,EACC,sBAAKT,UAAU,cAAf,UACC,uBACA,qBAAKW,IAAKR,EAAMS,UAAWC,IAAKV,EAAMW,OAFvC,IAEgD,6BAAKX,EAAMO,QAC1D,4BAAIP,EAAMY,WACV,wBACCjB,QAAS,WAjBU,IAACY,IAkBJP,EAAMO,MAjBzBhB,QAAQC,IAAIe,GACZL,EAAiBK,IAcf,6BAWF,sBAAKV,UAAU,cAAf,UACC,wBAAQF,QAtCgB,WACzBkB,MAAM,kCAAD,OAAmCV,IACtCW,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACN1B,QAAQC,IAAIyB,GACZhB,EAAegB,OAiChB,2BACCX,EACD,cAAC,EAAD,CACCZ,cAAeA,EACfE,oBA3ByB,WAC3BM,EAAiB,W,OCgBJgB,EArCF,WAcZ,OACC,mCACC,wCACQ,2CADR,aACyC,IACxC,mEACA,gCACC,uBACA,cAAC,IAAD,CAAMC,GAAG,eAAT,SACC,qBACCX,IAAI,6dACJE,IAAI,gBChBIU,G,MATA,WACd,OACC,sBAAKvB,UAAW,MAAhB,UACC,mBAAGwB,GAAK,OAAOC,KAAK,IAApB,kBACA,cAAC,IAAD,CAAMH,GAAG,aAAT,8BCKYI,EATA,WACd,OACC,gDAEC,qBAAKf,IAAI,4DAA4DE,IAAK,S,uCCkC9Dc,MA3Bf,WAOC,OACC,sBAAK3B,UAAU,MAAf,UACC,8BACC,cAAC,IAAD,CAAMsB,GAAG,QAGV,iCACC,cAAC,IAAD,CAAOM,KAAK,IAAIC,UAAWN,IAC3B,cAAC,IAAD,CAAOO,OAAK,EAACF,KAAK,IAAIC,UAAWR,IACjC,cAAC,IAAD,CAAOS,OAAK,EAACF,KAAK,eAAeC,UAAW5B,IAC5C,cAAC,IAAD,CAAO6B,OAAK,EAACF,KAAK,aAAaC,UAAWrC,OAG3C,iCACC,cAAC,IAAD,CAAOoC,KAAK,IAAIC,UAAWH,UCvBhBK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,YCEdO,IAASC,OAEP,cAAC,IAAD,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.62fbf2af.chunk.js","sourcesContent":["import React from 'react';\n\nconst WatchList = (props) => {\n\tconsole.log(props);\n\n    \n\tlet watchListJSX = '';\n\tif (props.selectedAnime) {\n\t\twatchListJSX = (\n\t\t\t<>\n\t\t\t\t<h2>My List</h2>\n\t\t\t\t<p>\n\t\t\t\t\t{props.selectedAnime}\n\t\t\t\t\t<button onClick={props.removeAnimeFromList}>Remove from list</button>\n\t\t\t\t</p>\n\t\t\t</>\n\t\t);\n\t}\n\n\treturn <div className='WatchList'>{watchListJSX}</div>;\n};\n\nexport default WatchList;\n","import React, { useState } from 'react';\nimport WatchList from '../WatchList/WatchList';\n\nconst RandomAnime = () => {\n\tconst [anime, setRandomAnime] = useState([]);\n\tconst [selectedAnime, setSelectedAnime] = useState();\n\n\tconst random = Math.floor(Math.random() * 1000);\n\n\tconst handleRandomClick = () => {\n\t\tfetch(`https://api.jikan.moe/v3/anime/${random}`)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tsetRandomAnime(data);\n\t\t\t});\n\t};\n\n\t//this gets me a string which I was able to successfully use to add to my list but not sure how to add multiples\n\tconst addAnimeToList = (title,) => {\n\t\tconsole.log(title);\n\t\tsetSelectedAnime(title);\n\t};\n\n\tconst removeAnimeFromList = () => {\n\t\tsetSelectedAnime('');\n\t};\n\n\tlet animeJSX = '';\n\tif (anime.title) {\n\t\tanimeJSX = (\n\t\t\t<div className='RandomAnime'>\n\t\t\t\t<br />\n\t\t\t\t<img src={anime.image_url} alt={anime.rank} /> <h2>{anime.title}</h2>\n\t\t\t\t<p>{anime.synopsis}</p>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\taddAnimeToList(anime.title);\n\t\t\t\t\t}}>\n\t\t\t\t\tAdd to List\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className='RandomAnime'>\n\t\t\t<button onClick={handleRandomClick}>Random Anime </button>\n\t\t\t{animeJSX}\n\t\t\t<WatchList\n\t\t\t\tselectedAnime={selectedAnime}\n\t\t\t\tremoveAnimeFromList={removeAnimeFromList}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default RandomAnime;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst Main = () => {\n\n\t// const [animeQuote, setAnimeQuote] = useState(\"\");\n\n\t// useEffect(() => {\n\t// \tconst movieUrl = 'https://animechan.vercel.app/api/random';\n\t// \tconst makeApiCall = async () => {\n\t// \t\tconst res = await fetch(movieUrl);\n\t// \t\tconst json = await res.json();\n\t// \t\tsetAnimeQuote(json);\n\t// \t};\n\t// \tmakeApiCall();\n\t// }, []);\n\n\treturn (\n\t\t<>\n\t\t\t<p>\n\t\t\t\tRandom <strong>anime</strong> Generator{' '}\n\t\t\t\t<p>Click the image below to continue!</p>\n\t\t\t\t<div>\n\t\t\t\t\t<br />\n\t\t\t\t\t<Link to='/RandomAnime'>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc='https://www.ft.com/__origami/service/image/v2/images/raw/https%253A%252F%252Fs3-ap-northeast-1.amazonaws.com%252Fpsh-ex-ftnikkei-3937bb4%252Fimages%252F5%252F3%252F5%252F8%252F28668535-1-eng-GB%252F%25E3%2582%25BD%25E3%2583%258B%25E3%2583%25BC%25E4%25B8%258A%25EF%25BC%2589%25E8%25BF%25BD%25E5%258A%25A0%25E3%2580%2580%25E9%25AC%25BC%25E6%25BB%2585%25E3%2581%25AE%25E5%2588%258320200805183428557_Data.jpg?width=700&fit=cover&gravity=faces&dpr=2&quality=medium&source=nar-cms'\n\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</p> \n\t\t\t{/* add button here for random quote */}\n\t\t\t{/* <p> {animeQuote.quote ? animeQuote.quote : null}</p>\n\t\t\t<p> {animeQuote.anime ? animeQuote.anime : null}</p>\n\t\t\t<p> {animeQuote.character ? animeQuote.character : null}</p> */}\n\t\t</>\n\t);\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n\treturn (\n\t\t<nav className= \"Nav\">\n\t\t\t<a id = \"home\" href='/'>Home</a>\n\t\t\t<Link to='/WatchList'> Watch List</Link>\n\t\t</nav>\n\t);\n};\n\nexport default Header;\n","import React from 'react';\n\n\nconst Footer = () => {\n\treturn (\n\t\t<footer>\n\t\t\tDaniel Lee\n\t\t\t<img src=\"https://userstyles.org/style_screenshots/190701_after.gif\" alt =\"\" />\n\t\t</footer>\n\t);\n};\n\nexport default Footer;\n","import './App.css';\nimport RandomAnime from './Components/RandomAnime/RandomAnime';\nimport Main from './Components/Main/Main';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './Components/Header/Header';\nimport Footer from './Components/Footer/Footer';\nimport './Components/Footer/Footer.css';\nimport './Components/Header/Header.css';\nimport './Components/Main/Main.css';\nimport './Components/RandomAnime/RandomAnime.css';\nimport { Link, Route } from 'react-router-dom';\nimport WatchList from './Components/WatchList/WatchList';\nimport './Components/WatchList/WatchList.css';\n\nfunction App() {\n\n\n\n\n\n\t\n\treturn (\n\t\t<div className='App'>\n\t\t\t<nav>\n\t\t\t\t<Link to='/'></Link>\n\t\t\t</nav>\n\n\t\t\t<main>\n\t\t\t\t<Route path='/' component={Header} />\n\t\t\t\t<Route exact path='/' component={Main} />\n\t\t\t\t<Route exact path='/RandomAnime' component={RandomAnime} />\n\t\t\t\t<Route exact path='/WatchList' component={WatchList} />\n\t\t\t</main>\n\n\t\t\t<footer>\n\t\t\t\t<Route path='/' component={Footer} />\n\t\t\t</footer>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.bundle';\n\nReactDOM.render(\n  \n  <Router>\n    <App />\n  </Router>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}