{"version":3,"sources":["Components/WatchList/WatchList.js","Components/RandomAnime/RandomAnime.js","Components/Main/Main.js","Components/Header/Header.js","Components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["WatchList","props","watchListJSX","selectedAnime","onClick","removeAnimeFromList","className","GoogleSpreadsheet","require","creds","doc","RandomAnime","useState","anime","setRandomAnime","name","setName","makeInitialCall","a","useServiceAccountAuth","loadInfo","sheetsByIndex","getRows","useEffect","handleSubmit","title","addRow","Name","random","Math","floor","animeJSX","src","image_url","alt","rank","synopsis","fetch","then","response","json","data","Main","to","Header","id","href","Footer","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+8FAqBeA,EAnBG,SAACC,GAGlB,IAAIC,EAAe,GAanB,OAZID,EAAME,gBACTD,EACC,qCACC,yCACA,8BACED,EAAME,cADR,QAEC,wBAAQC,QAASH,EAAMI,oBAAvB,qCAMG,qBAAKC,UAAU,YAAf,SAA4BJ,KChB5BK,EAAsBC,EAAQ,KAA9BD,kBACFE,EAAQD,EAAQ,KAClBE,EAAM,GA6EKC,EA3EK,WACnB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0CF,qBAA1C,mBAAOT,EAAP,KAEA,GAFA,KAEwBS,mBAAS,KAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEMC,EAAe,uCAAG,sBAAAC,EAAA,6DACvBR,EAAM,IAAIH,EAAkB,gDADL,SAEjBG,EAAIS,sBAAsBV,GAFT,uBAGjBC,EAAIU,WAHa,uBAIFV,EAAIW,cAAc,GAAGC,UAJnB,yDAAH,qDAQrBC,qBAAU,WACTN,MACE,IAEH,IAAMO,EAAY,uCAAG,WAAOC,GAAP,SAAAP,EAAA,6DACpBF,EAAQS,GADY,SAEFf,EAAIW,cAAc,GAFhB,cAGdK,OAAO,CAAEC,KAAMZ,IAHD,2CAAH,sDAMZa,EAASC,KAAKC,MAAsB,IAAhBD,KAAKD,UAsB3BG,EAAW,GAiBf,OAhBIlB,EAAMY,QACTM,EACC,sBAAKzB,UAAU,cAAf,UACC,uBACA,qBAAK0B,IAAKnB,EAAMoB,UAAWC,IAAKrB,EAAMsB,OAFvC,IAEgD,6BAAKtB,EAAMY,QAC1D,4BAAIZ,EAAMuB,WACV,wBACChC,QAAS,WACRoB,EAAaX,EAAMY,QAFrB,6BAWF,sBAAKnB,UAAU,cAAf,UACC,wBAAQF,QAvCgB,WACzBiC,MAAM,kCAAD,OAAmCT,IACtCU,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEN3B,EAAe2B,OAkChB,2BACCV,EACD,cAAC,EAAD,CACC5B,cAAeA,Q,QCtBJuC,EAjDF,WAwBZ,OACC,mCACC,wCACQ,2CADR,aACyC,IACxC,mEACA,gCACC,uBACA,cAAC,IAAD,CAAMC,GAAG,eAAT,SACC,qBACCX,IAAI,6dACJE,IAAI,gBCzBIU,G,OATA,WACd,OACC,sBAAKtC,UAAW,MAAhB,UACC,mBAAGuC,GAAK,OAAOC,KAAK,IAApB,kBACA,cAAC,IAAD,CAAMH,GAAG,aAAT,8BCKYI,EATA,WACd,OACC,gDAEC,qBAAKf,IAAI,4DAA4DE,IAAK,S,6CCkC9Dc,MA3Bf,WAOC,OACC,sBAAK1C,UAAU,MAAf,UACC,8BACC,cAAC,IAAD,CAAMqC,GAAG,QAGV,iCACC,cAAC,IAAD,CAAOM,KAAK,IAAIC,UAAWN,IAC3B,cAAC,IAAD,CAAOO,OAAK,EAACF,KAAK,IAAIC,UAAWR,IACjC,cAAC,IAAD,CAAOS,OAAK,EAACF,KAAK,eAAeC,UAAWvC,IAC5C,cAAC,IAAD,CAAOwC,OAAK,EAACF,KAAK,aAAaC,UAAWlD,OAG3C,iCACC,cAAC,IAAD,CAAOiD,KAAK,IAAIC,UAAWH,UCvBhBK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,cCEdO,IAASC,OAEP,cAAC,IAAD,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.38dfe9b4.chunk.js","sourcesContent":["import React from 'react';\n\nconst WatchList = (props) => {\n\t// console.log(props);\n\n\tlet watchListJSX = '';\n\tif (props.selectedAnime) {\n\t\twatchListJSX = (\n\t\t\t<>\n\t\t\t\t<h2>My List</h2>\n\t\t\t\t<p>\n\t\t\t\t\t{props.selectedAnime} &nbsp;\n\t\t\t\t\t<button onClick={props.removeAnimeFromList}>Remove from list</button>\n\t\t\t\t</p>\n\t\t\t</>\n\t\t);\n\t}\n\n\treturn <div className='WatchList'>{watchListJSX}</div>;\n};\n\nexport default WatchList;\n","import React, { useState, useEffect } from 'react';\nimport WatchList from '../WatchList/WatchList';\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\nconst creds = require('./client_secret.json');\nlet doc = {};\n\nconst RandomAnime = () => {\n\tconst [anime, setRandomAnime] = useState([]);\n\tconst [selectedAnime, setSelectedAnime] = useState();\n\n\tconst [name, setName] = useState('');\n\n\tconst makeInitialCall = async () => {\n\t\tdoc = new GoogleSpreadsheet('14GY2g8HK9MeBcGz8n499oeCPBShHGyw-2FjUzK9tu2k');\n\t\tawait doc.useServiceAccountAuth(creds);\n\t\tawait doc.loadInfo();\n\t\tlet dataRows = await doc.sheetsByIndex[0].getRows();\n\t\t// console.log(doc.sheetsByIndex[0]);\n\t\t// console.log(dataRows);\n\t};\n\tuseEffect(() => {\n\t\tmakeInitialCall();\n\t}, []);\n\n\tconst handleSubmit = async (title) => {\n\t\tsetName(title);\n\t\tlet sheet = await doc.sheetsByIndex[0];\n\t\tsheet.addRow({ Name: name });\n\t};\n\n\tconst random = Math.floor(Math.random() * 1000);\n\n\tconst handleRandomClick = () => {\n\t\tfetch(`https://api.jikan.moe/v3/anime/${random}`)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\t// console.log(data);\n\t\t\t\tsetRandomAnime(data);\n\t\t\t});\n\t};\n\n\t// old way of adding anime\n\t// const addAnimeToList = (title,) => {\n\t// \tconsole.log(title);\n\t// \tsetSelectedAnime(title);\n\t// };\n\n\t// old of removing anime\n\t// const removeAnimeFromList = () => {\n\t// \tsetSelectedAnime('');\n\t// };\n\n\tlet animeJSX = '';\n\tif (anime.title) {\n\t\tanimeJSX = (\n\t\t\t<div className='RandomAnime'>\n\t\t\t\t<br />\n\t\t\t\t<img src={anime.image_url} alt={anime.rank} /> <h2>{anime.title}</h2>\n\t\t\t\t<p>{anime.synopsis}</p>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\thandleSubmit(anime.title);\n\t\t\t\t\t}}>\n\t\t\t\t\tAdd to List\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className='RandomAnime'>\n\t\t\t<button onClick={handleRandomClick}>Random Anime </button>\n\t\t\t{animeJSX}\n\t\t\t<WatchList\n\t\t\t\tselectedAnime={selectedAnime}\n\t\t\t\t// removeAnimeFromList={removeAnimeFromList}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default RandomAnime;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Main = () => {\n\t//another API I made but it has a limit so dont want to break website\n\t// const [animeQuote, setAnimeQuote] = useState('');\n\n\t// const handleRandomQuote = () => {\n\t// \tfetch('https://animechan.vercel.app/api/random')\n\t// \t\t.then((response) => response.json())\n\t// \t\t.then((data) => {\n\t// \t\t\tconsole.log(data);\n\t// \t\t\tsetAnimeQuote(data);\n\t// \t\t});\n\t// };\n\n\t// let quoteJSX = '';\n\t// if (animeQuote.anime) {\n\t// \tquoteJSX = (\n\t// \t\t<div className='RandomQuote'>\n\t// \t\t\t<p>{animeQuote.quote}</p>\n\t// \t\t\t<p>Anime: {animeQuote.anime}</p>\n\t// \t\t\t<p>{animeQuote.character}</p>\n\t// \t\t</div>\n\t// \t);\n\t// }\n\n\treturn (\n\t\t<>\n\t\t\t<p>\n\t\t\t\tRandom <strong>anime</strong> Generator{' '}\n\t\t\t\t<p>Click the image below to continue!</p>\n\t\t\t\t<div>\n\t\t\t\t\t<br />\n\t\t\t\t\t<Link to='/RandomAnime'>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc='https://www.ft.com/__origami/service/image/v2/images/raw/https%253A%252F%252Fs3-ap-northeast-1.amazonaws.com%252Fpsh-ex-ftnikkei-3937bb4%252Fimages%252F5%252F3%252F5%252F8%252F28668535-1-eng-GB%252F%25E3%2582%25BD%25E3%2583%258B%25E3%2583%25BC%25E4%25B8%258A%25EF%25BC%2589%25E8%25BF%25BD%25E5%258A%25A0%25E3%2580%2580%25E9%25AC%25BC%25E6%25BB%2585%25E3%2581%25AE%25E5%2588%258320200805183428557_Data.jpg?width=700&fit=cover&gravity=faces&dpr=2&quality=medium&source=nar-cms'\n\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</p>\n\t\t\t{/* <br />\n\t\t\t<button className='RandomQuoteButton' onClick={handleRandomQuote}>\n\t\t\t\trandom quote\n\t\t\t</button>\n\t\t\t<br />\n\t\t\t{quoteJSX} */}\n\t\t</>\n\t);\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n\treturn (\n\t\t<nav className= \"Nav\">\n\t\t\t<a id = \"home\" href='/'>Home</a>\n\t\t\t<Link to='/WatchList'> Watch List</Link>\n\t\t</nav>\n\t);\n};\n\nexport default Header;\n","import React from 'react';\n\n\nconst Footer = () => {\n\treturn (\n\t\t<footer>\n\t\t\tDaniel Lee\n\t\t\t<img src=\"https://userstyles.org/style_screenshots/190701_after.gif\" alt =\"\" />\n\t\t</footer>\n\t);\n};\n\nexport default Footer;\n","import './App.css';\nimport RandomAnime from './Components/RandomAnime/RandomAnime';\nimport Main from './Components/Main/Main';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './Components/Header/Header';\nimport Footer from './Components/Footer/Footer';\nimport './Components/Footer/Footer.css';\nimport './Components/Header/Header.css';\nimport './Components/Main/Main.css';\nimport './Components/RandomAnime/RandomAnime.css';\nimport { Link, Route } from 'react-router-dom';\nimport WatchList from './Components/WatchList/WatchList';\nimport './Components/WatchList/WatchList.css';\n\nfunction App() {\n\n\n\n\n\n\t\n\treturn (\n\t\t<div className='App'>\n\t\t\t<nav>\n\t\t\t\t<Link to='/'></Link>\n\t\t\t</nav>\n\n\t\t\t<main>\n\t\t\t\t<Route path='/' component={Header} />\n\t\t\t\t<Route exact path='/' component={Main} />\n\t\t\t\t<Route exact path='/RandomAnime' component={RandomAnime} />\n\t\t\t\t<Route exact path='/WatchList' component={WatchList} />\n\t\t\t</main>\n\n\t\t\t<footer>\n\t\t\t\t<Route path='/' component={Footer} />\n\t\t\t</footer>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter as Router} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.bundle';\n\nReactDOM.render(\n  \n  <Router>\n    <App />\n  </Router>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}